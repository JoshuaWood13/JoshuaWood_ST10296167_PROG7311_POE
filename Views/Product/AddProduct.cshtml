@model JoshuaWood_ST10296167_PROG7311_POE.Models.Product

<head>

</head>

<body>
    <div class="text-center mt-5">
        <h1>Add Product</h1>

        <div class="mx-auto" style="max-width: 400px;">
            <hr />
            <form asp-action="AddFarmerProduct">
                @Html.HiddenFor(model => model.FarmerCode)
                @Html.HiddenFor(model => model.ProductCode)
                <div asp-validation-summary="ModelOnly" class="text-danger"></div>

                <div class="form-floating mb-3">
                    <input asp-for="Name"
                           class="form-control @(ViewData.ModelState["Name"]?.Errors.Count > 0 ? "is-invalid" : "")"
                           placeholder="Product Name" />
                    <label asp-for="Name"></label>
                    <span asp-validation-for="Name" class="invalid-feedback"></span>
                </div>

                <div class="form-floating mb-3">
                    <input asp-for="Price" type="number" step="0.01" min="0.01"
                           class="form-control @(ViewData.ModelState["Price"]?.Errors.Count > 0 ? "is-invalid" : "")"
                           placeholder="Product Price" value=""/>
                    <label asp-for="Price"></label>
                    <span asp-validation-for="Price" class="invalid-feedback"></span>
                </div>

                <div class="form-floating mb-3">
                    <select asp-for="Category"
                            class="form-select @(ViewData.ModelState["Category"]?.Errors.Count > 0 ? "is-invalid" : "")">
                        <option hidden disabled selected value="">Select</option>
                        <option value="Consumer Products">Consumer Products</option>
                        <option value="Fruits">Fruits</option>
                        <option value="Grains">Grains</option>
                        <option value="Livestock">Livestock</option>
                        <option value="Vegetables">Vegetables</option>
                        <option value="Other">Other</option>
                    </select>
                    <label asp-for="Category"></label>
                    <span asp-validation-for="Category" class="invalid-feedback"></span>
                </div>

                <div class="form-floating mb-3">
                    <textarea asp-for="Description"
                              class="form-control @(ViewData.ModelState["Description"]?.Errors.Count > 0 ? "is-invalid" : "")"
                              placeholder="Product Description"></textarea>
                    <label asp-for="Description"></label>
                    <span asp-validation-for="Description" class="invalid-feedback"></span>
                </div>

                <button type="submit" class="btn btn-primary w-100" style="height: 45px;">Create Product</button>
            </form>
        </div>
    </div>
    <div aria-live="polite" aria-atomic="true" class="position-relative">
        <div class="toast-container position-fixed bottom-0 end-0 p-3" style="z-index: 1080;">
            @if (TempData["Success"] != null)
            {
                <div id="successToast" class="toast align-items-center text-white bg-success border-0 show" role="alert">
                    <div class="d-flex">
                        <div class="toast-body">
                            @TempData["Success"]
                        </div>
                        <button type="button" class="btn-close btn-close-white me-2 m-auto" data-bs-dismiss="toast" aria-label="Close"></button>
                    </div>
                </div>
            }

            @if (TempData["Error"] != null)
            {
                <div id="errorToast" class="toast align-items-center text-white bg-danger border-0 show" role="alert">
                    <div class="d-flex">
                        <div class="toast-body">
                            @TempData["Error"]
                        </div>
                        <button type="button" class="btn-close btn-close-white me-2 m-auto" data-bs-dismiss="toast" aria-label="Close"></button>
                    </div>
                </div>
            }
        </div>
    </div>
</body>

<!-- Used ChatGPT to help provide scripts to clear invalid input on type and fade out alert messages -->
@section Scripts {
    <script>
        // Clear error on type
        $('input, textarea').on('input', function () {
            var $input = $(this);
            $input.removeClass('is-invalid');
            $input.siblings('.invalid-feedback').text('');
        });

        // Auto dismiss toast
        setTimeout(() => {
            const toasts = document.querySelectorAll('.toast');
            toasts.forEach(toast => {
                const bsToast = bootstrap.Toast.getOrCreateInstance(toast);
                bsToast.hide();
            });
        }, 2500);
    </script>
}